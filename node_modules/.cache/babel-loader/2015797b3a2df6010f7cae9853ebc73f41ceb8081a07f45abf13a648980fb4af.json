{"ast":null,"code":"var _jsxFileName = \"/Users/mameboussodiakhate/Desktop/final2/cs337finalproject/src/pages/TransactionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/TransactionPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionPage({\n  transactions = [],\n  onAddTransaction,\n  currentBalance = 0,\n  userData\n}) {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const [type, setType] = useState('expense');\n  const [recipientUsername, setRecipientUsername] = useState('');\n  const [error, setError] = useState('');\n  const categories = ['food', 'rent', 'utilities', 'entertainment', 'transportation', 'other'];\n  const getAmountSign = transaction => {\n    if (transaction.type === 'income') {\n      return '+';\n    } else if (transaction.type === 'debit') {\n      return '-';\n    } else if (transaction.type === 'transfer') {\n      return String(transaction.recipient) === String(userData._id) ? '+' : '-';\n    }\n    return '';\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate sufficient funds for expense and transfer\n    if ((type === 'expense' || type === 'transfer') && parseFloat(amount) > currentBalance) {\n      setError('Insufficient funds');\n      return;\n    }\n    try {\n      const newTransaction = {\n        type: type === 'expense' ? 'debit' : type,\n        category: type === 'income' ? 'income' : category,\n        // Ensure category is set for transfer and expense\n        amount: parseFloat(amount),\n        recipientUsername: type === 'transfer' ? recipientUsername : null,\n        date: new Date().toISOString()\n      };\n      console.log('Submitting transaction:', newTransaction);\n      await onAddTransaction(newTransaction);\n\n      // Reset the form\n      setAmount('');\n      setCategory('');\n      setType('expense');\n      setRecipientUsername('');\n      setError('');\n    } catch (error) {\n      setError('Transaction failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balance-info\",\n      children: [\"Current Balance: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: (currentBalance || 0) <= 0 ? 'negative-balance' : 'positive-balance',\n        children: [\"$\", (currentBalance || 0).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: type,\n        onChange: e => {\n          setType(e.target.value);\n          setError('');\n          setCategory(''); // Reset category when type changes\n        },\n        className: \"transaction-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"expense\",\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"income\",\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"transfer\",\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        placeholder: \"Amount\",\n        className: \"transaction-input\",\n        min: \"0.01\",\n        step: \"0.01\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), (type === 'expense' || type === 'transfer') && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        className: \"transaction-input\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat,\n          children: cat.charAt(0).toUpperCase() + cat.slice(1)\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), type === 'transfer' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: recipientUsername,\n        onChange: e => setRecipientUsername(e.target.value),\n        placeholder: \"Recipient Username\",\n        className: \"transaction-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `transaction-item ${transaction.type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transaction-category\",\n              children: transaction.type === 'transfer' ? `${transaction.category.charAt(0).toUpperCase() + transaction.category.slice(1)} - Transfer` : transaction.category.charAt(0).toUpperCase() + transaction.category.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transaction-date\",\n              children: new Date(transaction.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `transaction-amount ${transaction.type}`,\n            children: [getAmountSign(transaction), \" $\", Number(transaction.amount).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this)]\n        }, transaction.id || transaction._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionPage, \"pOUvREIKQ+2sblNjvaHl6eKpNu0=\");\n_c = TransactionPage;\nexport default TransactionPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TransactionPage","transactions","onAddTransaction","currentBalance","userData","_s","amount","setAmount","category","setCategory","type","setType","recipientUsername","setRecipientUsername","error","setError","categories","getAmountSign","transaction","String","recipient","_id","handleSubmit","e","preventDefault","parseFloat","newTransaction","date","Date","toISOString","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onSubmit","value","onChange","target","placeholder","min","step","required","map","cat","charAt","toUpperCase","slice","length","toLocaleDateString","Number","id","_c","$RefreshReg$"],"sources":["/Users/mameboussodiakhate/Desktop/final2/cs337finalproject/src/pages/TransactionPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/TransactionPage.css';\n\nfunction TransactionPage({ transactions = [], onAddTransaction, currentBalance = 0, userData}) {\n    const [amount, setAmount] = useState('');\n    const [category, setCategory] = useState('');\n    const [type, setType] = useState('expense');\n    const [recipientUsername, setRecipientUsername] = useState('');\n    const [error, setError] = useState('');\n\n    const categories = [\n        'food',\n        'rent',\n        'utilities',\n        'entertainment',\n        'transportation',\n        'other'\n    ];\n\n    const getAmountSign = (transaction) => {\n        if (transaction.type === 'income') {\n            return '+';\n        } else if (transaction.type === 'debit') {\n            return '-';\n        } else if (transaction.type === 'transfer') {\n            return String(transaction.recipient) === String(userData._id) ? '+' : '-';\n        }\n        return ''; \n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Validate sufficient funds for expense and transfer\n        if ((type === 'expense' || type === 'transfer') && parseFloat(amount) > currentBalance) {\n            setError('Insufficient funds');\n            return;\n        }\n\n        try {\n            const newTransaction = {\n                type: type === 'expense' ? 'debit' : type,\n                category: type === 'income' ? 'income' : category, // Ensure category is set for transfer and expense\n                amount: parseFloat(amount),\n                recipientUsername: type === 'transfer' ? recipientUsername : null,\n                date: new Date().toISOString(),\n            };\n\n            console.log('Submitting transaction:', newTransaction);\n            await onAddTransaction(newTransaction);\n\n            // Reset the form\n            setAmount('');\n            setCategory('');\n            setType('expense');\n            setRecipientUsername('');\n            setError('');\n        } catch (error) {\n            setError('Transaction failed. Please try again.');\n        }\n    };\n\n    return (\n        <div className=\"transaction-page\">\n            <h2>Add Transaction</h2>\n            <div className=\"balance-info\">\n                Current Balance: <span className={(currentBalance || 0) <= 0 ? 'negative-balance' : 'positive-balance'}>\n                    ${(currentBalance || 0).toFixed(2)}\n                </span>\n            </div>\n\n            {error && <div className=\"error-message\">{error}</div>}\n\n            <form onSubmit={handleSubmit}>\n                <select\n                    value={type}\n                    onChange={(e) => {\n                        setType(e.target.value);\n                        setError('');\n                        setCategory(''); // Reset category when type changes\n                    }}\n                    className=\"transaction-input\"\n                >\n                    <option value=\"expense\">Expense</option>\n                    <option value=\"income\">Income</option>\n                    <option value=\"transfer\">Transfer</option>\n                </select>\n\n                <input\n                    type=\"number\"\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                    placeholder=\"Amount\"\n                    className=\"transaction-input\"\n                    min=\"0.01\"\n                    step=\"0.01\"\n                    required\n                />\n\n                {/* Category dropdown for Expense and Transfer */}\n                {(type === 'expense' || type === 'transfer') && (\n                    <select\n                        value={category}\n                        onChange={(e) => setCategory(e.target.value)}\n                        className=\"transaction-input\"\n                        required\n                    >\n                        <option value=\"\">Select Category</option>\n                        {categories.map(cat => (\n                            <option key={cat} value={cat}>\n                                {cat.charAt(0).toUpperCase() + cat.slice(1)}\n                            </option>\n                        ))}\n                    </select>\n                )}\n\n                {/* Recipient Username input for Transfer */}\n                {type === 'transfer' && (\n                    <input\n                        type=\"text\"\n                        value={recipientUsername}\n                        onChange={(e) => setRecipientUsername(e.target.value)}\n                        placeholder=\"Recipient Username\"\n                        className=\"transaction-input\"\n                        required\n                    />\n                )}\n\n                <button type=\"submit\">Add Transaction</button>\n            </form>\n\n            <div className=\"transactions-list\">\n                <h3>Recent Transactions</h3>\n                {transactions.length === 0 ? (\n                    <p>No transactions yet</p>\n                ) : (\n                    <ul>\n                        {transactions.map(transaction => (\n                            <li key={transaction.id || transaction._id} className={`transaction-item ${transaction.type}`}>\n                                <div className=\"transaction-info\">\n                                    <span className=\"transaction-category\">\n                                        {transaction.type === 'transfer'\n                                            ? `${transaction.category.charAt(0).toUpperCase() + transaction.category.slice(1)} - Transfer`\n                                            : transaction.category.charAt(0).toUpperCase() + transaction.category.slice(1)}\n                                    </span>\n                                    <span className=\"transaction-date\">\n                                        {new Date(transaction.date).toLocaleDateString()}\n                                    </span>\n                                </div>\n                                <div className={`transaction-amount ${transaction.type}`}>\n                                    {getAmountSign(transaction)} ${Number(transaction.amount).toFixed(2)}\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default TransactionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}