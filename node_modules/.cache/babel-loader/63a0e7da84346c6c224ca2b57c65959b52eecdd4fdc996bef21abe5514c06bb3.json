{"ast":null,"code":"var _jsxFileName = \"/Users/mameboussodiakhate/Desktop/final2/cs337finalproject/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BalanceDisplay from '../components/BalanceDisplay';\nimport SpendingChart from '../components/SpendingChart';\nimport TransactionList from '../components/TransactionList';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  userData\n}) {\n  _s();\n  const [viewMode, setViewMode] = useState('none');\n  const [displayTransactions, setDisplayTransactions] = useState([]);\n  const {\n    balance,\n    transactions = []\n  } = userData;\n\n  // Update displayTransactions whenever transactions change\n  useEffect(() => {\n    if (transactions.length > 0) {\n      const sorted = [...transactions].sort((a, b) => new Date(b.date) - new Date(a.date));\n      setDisplayTransactions(sorted);\n    }\n  }, [transactions]);\n\n  // Restore view mode from localStorage\n  useEffect(() => {\n    const savedViewMode = localStorage.getItem('dashboardViewMode');\n    if (savedViewMode) {\n      setViewMode(savedViewMode);\n    }\n  }, []);\n  const handleViewRecent = () => {\n    const newMode = viewMode === 'recent' ? 'none' : 'recent';\n    setViewMode(newMode);\n    localStorage.setItem('dashboardViewMode', newMode);\n  };\n  const handleViewAll = () => {\n    const newMode = viewMode === 'all' ? 'none' : 'all';\n    setViewMode(newMode);\n    localStorage.setItem('dashboardViewMode', newMode);\n  };\n  const getVisibleTransactions = () => {\n    if (viewMode === 'all') {\n      return displayTransactions; // Show all transactions\n    }\n    if (viewMode === 'recent') {\n      return displayTransactions.slice(0, 3); // Show only the 3 most recent\n    }\n    return []; // Default to no transactions\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome\", userData.username ? `, ${userData.username}` : '', \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-recent-btn ${viewMode === 'recent' ? 'active' : ''}`,\n          onClick: handleViewRecent,\n          children: [\"Recent Transactions (\", Math.min(3, displayTransactions.length), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-all-btn ${viewMode === 'all' ? 'active' : ''}`,\n          onClick: handleViewAll,\n          children: [\"View All Transactions (\", displayTransactions.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(BalanceDisplay, {\n        balance: balance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SpendingChart, {\n        transactions: displayTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), \" \", viewMode !== 'none' && /*#__PURE__*/_jsxDEV(TransactionList, {\n        transactions: getVisibleTransactions(),\n        _id: userData._id /* Conditional display based on view mode */\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"1KLO2nnm3XEnThNnbEX5MhCZiIc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","BalanceDisplay","SpendingChart","TransactionList","jsxDEV","_jsxDEV","Dashboard","userData","_s","viewMode","setViewMode","displayTransactions","setDisplayTransactions","balance","transactions","length","sorted","sort","a","b","Date","date","savedViewMode","localStorage","getItem","handleViewRecent","newMode","setItem","handleViewAll","getVisibleTransactions","slice","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Math","min","_id","_c","$RefreshReg$"],"sources":["/Users/mameboussodiakhate/Desktop/final2/cs337finalproject/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BalanceDisplay from '../components/BalanceDisplay';\nimport SpendingChart from '../components/SpendingChart';\nimport TransactionList from '../components/TransactionList';\nimport '../styles/Dashboard.css';\n\nfunction Dashboard({ userData }) {\n    const [viewMode, setViewMode] = useState('none');\n    const [displayTransactions, setDisplayTransactions] = useState([]);\n    const { balance, transactions = [] } = userData;\n\n    // Update displayTransactions whenever transactions change\n    useEffect(() => {\n        if (transactions.length > 0) {\n            const sorted = [...transactions].sort((a, b) =>\n                new Date(b.date) - new Date(a.date)\n            );\n            setDisplayTransactions(sorted);\n        }\n    }, [transactions]);\n\n    // Restore view mode from localStorage\n    useEffect(() => {\n        const savedViewMode = localStorage.getItem('dashboardViewMode');\n        if (savedViewMode) {\n            setViewMode(savedViewMode);\n        }\n    }, []);\n\n    const handleViewRecent = () => {\n        const newMode = viewMode === 'recent' ? 'none' : 'recent';\n        setViewMode(newMode);\n        localStorage.setItem('dashboardViewMode', newMode);\n    };\n\n    const handleViewAll = () => {\n        const newMode = viewMode === 'all' ? 'none' : 'all';\n        setViewMode(newMode);\n        localStorage.setItem('dashboardViewMode', newMode);\n    };\n\n    const getVisibleTransactions = () => {\n        if (viewMode === 'all') {\n            return displayTransactions; // Show all transactions\n        }\n        if (viewMode === 'recent') {\n            return displayTransactions.slice(0, 3); // Show only the 3 most recent\n        }\n        return []; // Default to no transactions\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard-header\">\n                <h1>Welcome{userData.username ? `, ${userData.username}` : ''}!</h1>\n                <div className=\"transaction-buttons\">\n                    <button\n                        className={`view-recent-btn ${viewMode === 'recent' ? 'active' : ''}`}\n                        onClick={handleViewRecent}\n                    >\n                        Recent Transactions ({Math.min(3, displayTransactions.length)})\n                    </button>\n                    <button\n                        className={`view-all-btn ${viewMode === 'all' ? 'active' : ''}`}\n                        onClick={handleViewAll}\n                    >\n                        View All Transactions ({displayTransactions.length})\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"dashboard-grid\">\n                <BalanceDisplay balance={balance} />\n                <SpendingChart transactions={displayTransactions} /> {/* Always show all transactions */}\n                {viewMode !== 'none' && (\n                    <TransactionList\n                        transactions={getVisibleTransactions()}\n                        _id={userData._id}  /* Conditional display based on view mode */\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}